/* 
 * VictorOps API
 *
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing UserContactMethodsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class UserContactMethodsApiTests : IDisposable
    {
        private UserContactMethodsApi instance;

        public UserContactMethodsApiTests()
        {
            instance = new UserContactMethodsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of UserContactMethodsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UserContactMethodsApi
            //Assert.IsType(typeof(UserContactMethodsApi), instance, "instance is a UserContactMethodsApi");
        }

        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsDevicesContactIdDelete
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsDevicesContactIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsDevicesContactIdDelete(xVOApiId, xVOApiKey, user, contactId);
            //Assert.IsType<ContactDevice> (response, "response is ContactDevice");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsDevicesContactIdGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsDevicesContactIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsDevicesContactIdGet(xVOApiId, xVOApiKey, user, contactId);
            //Assert.IsType<List<ContactDevice>> (response, "response is List<ContactDevice>");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsDevicesContactIdPut
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsDevicesContactIdPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //ContactDeviceAdd body = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsDevicesContactIdPut(xVOApiId, xVOApiKey, user, contactId, body);
            //Assert.IsType<ContactDevice> (response, "response is ContactDevice");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsDevicesGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsDevicesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsDevicesGet(xVOApiId, xVOApiKey, user);
            //Assert.IsType<List<ContactDevice>> (response, "response is List<ContactDevice>");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsEmailsContactIdDelete
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsEmailsContactIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsEmailsContactIdDelete(xVOApiId, xVOApiKey, user, contactId);
            //Assert.IsType<UserContact> (response, "response is UserContact");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsEmailsContactIdGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsEmailsContactIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsEmailsContactIdGet(xVOApiId, xVOApiKey, user, contactId);
            //Assert.IsType<List<UserContact>> (response, "response is List<UserContact>");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsEmailsGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsEmailsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsEmailsGet(xVOApiId, xVOApiKey, user);
            //Assert.IsType<List<UserContact>> (response, "response is List<UserContact>");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsEmailsPost
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsEmailsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //ContactEmailAdd body = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsEmailsPost(xVOApiId, xVOApiKey, user, body);
            //Assert.IsType<UserContact> (response, "response is UserContact");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsGet(xVOApiId, xVOApiKey, user);
            //Assert.IsType<InlineResponse2006> (response, "response is InlineResponse2006");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsPhonesContactIdDelete
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsPhonesContactIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsPhonesContactIdDelete(xVOApiId, xVOApiKey, user, contactId);
            //Assert.IsType<UserContact> (response, "response is UserContact");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsPhonesContactIdGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsPhonesContactIdGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //string contactId = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsPhonesContactIdGet(xVOApiId, xVOApiKey, user, contactId);
            //Assert.IsType<List<UserContact>> (response, "response is List<UserContact>");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsPhonesGet
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsPhonesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsPhonesGet(xVOApiId, xVOApiKey, user);
            //Assert.IsType<List<UserContact>> (response, "response is List<UserContact>");
        }
        
        /// <summary>
        /// Test ApiPublicV1UserUserContactMethodsPhonesPost
        /// </summary>
        [Fact]
        public void ApiPublicV1UserUserContactMethodsPhonesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string xVOApiId = null;
            //string xVOApiKey = null;
            //string user = null;
            //ContactPhoneAdd body = null;
            //var response = instance.ApiPublicV1UserUserContactMethodsPhonesPost(xVOApiId, xVOApiKey, user, body);
            //Assert.IsType<UserContact> (response, "response is UserContact");
        }
        
    }

}
