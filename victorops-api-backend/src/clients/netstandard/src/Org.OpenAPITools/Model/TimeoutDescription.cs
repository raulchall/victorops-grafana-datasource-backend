/* 
 * VictorOps API
 *
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Defines TimeoutDescription
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum TimeoutDescription
    {
        /// <summary>
        /// Enum _1minute for value: If still unacked after 1 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 1 minute")]
        _1minute = 1,

        /// <summary>
        /// Enum _5minute for value: If still unacked after 5 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 5 minute")]
        _5minute = 2,

        /// <summary>
        /// Enum _10minute for value: If still unacked after 10 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 10 minute")]
        _10minute = 3,

        /// <summary>
        /// Enum _15minute for value: If still unacked after 15 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 15 minute")]
        _15minute = 4,

        /// <summary>
        /// Enum _20minute for value: If still unacked after 20 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 20 minute")]
        _20minute = 5,

        /// <summary>
        /// Enum _25minute for value: If still unacked after 25 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 25 minute")]
        _25minute = 6,

        /// <summary>
        /// Enum _30minute for value: If still unacked after 30 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 30 minute")]
        _30minute = 7,

        /// <summary>
        /// Enum _45minute for value: If still unacked after 45 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 45 minute")]
        _45minute = 8,

        /// <summary>
        /// Enum _60minute for value: If still unacked after 60 minute
        /// </summary>
        [EnumMember(Value = "If still unacked after 60 minute")]
        _60minute = 9

    }

}
