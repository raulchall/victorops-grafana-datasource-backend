/* 
 * VictorOps API
 *
 * This API allows you to interact with the VictorOps platform in various ways. Your account may be limited to a total number of API calls per month. Also, some of these API calls have rate limits.  NOTE: In this documentation when creating a sample curl request (clicking the TRY IT OUT! button), in some API viewing interfaces, the '@' in an email address may be encoded. Please note that the REST endpoints will not process the encoded version. Make sure that the encoded character '%40' is changed to its unencoded form before submitting the curl request. 
 *
 * The version of the OpenAPI document: 0.0.3
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Some info about the team
    /// </summary>
    [DataContract]
    public partial class SimpleTeamDetail :  IEquatable<SimpleTeamDetail>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SimpleTeamDetail" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="slug">slug.</param>
        /// <param name="selfUrl">selfUrl.</param>
        /// <param name="membersUrl">membersUrl.</param>
        /// <param name="policiesUrl">policiesUrl.</param>
        /// <param name="adminsUrl">adminsUrl.</param>
        public SimpleTeamDetail(string name = default(string), string slug = default(string), string selfUrl = default(string), string membersUrl = default(string), string policiesUrl = default(string), string adminsUrl = default(string))
        {
            this.Name = name;
            this.Slug = slug;
            this.SelfUrl = selfUrl;
            this.MembersUrl = membersUrl;
            this.PoliciesUrl = policiesUrl;
            this.AdminsUrl = adminsUrl;
        }
        
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Slug
        /// </summary>
        [DataMember(Name="slug", EmitDefaultValue=false)]
        public string Slug { get; set; }

        /// <summary>
        /// Gets or Sets SelfUrl
        /// </summary>
        [DataMember(Name="_selfUrl", EmitDefaultValue=false)]
        public string SelfUrl { get; set; }

        /// <summary>
        /// Gets or Sets MembersUrl
        /// </summary>
        [DataMember(Name="_membersUrl", EmitDefaultValue=false)]
        public string MembersUrl { get; set; }

        /// <summary>
        /// Gets or Sets PoliciesUrl
        /// </summary>
        [DataMember(Name="_policiesUrl", EmitDefaultValue=false)]
        public string PoliciesUrl { get; set; }

        /// <summary>
        /// Gets or Sets AdminsUrl
        /// </summary>
        [DataMember(Name="_adminsUrl", EmitDefaultValue=false)]
        public string AdminsUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SimpleTeamDetail {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Slug: ").Append(Slug).Append("\n");
            sb.Append("  SelfUrl: ").Append(SelfUrl).Append("\n");
            sb.Append("  MembersUrl: ").Append(MembersUrl).Append("\n");
            sb.Append("  PoliciesUrl: ").Append(PoliciesUrl).Append("\n");
            sb.Append("  AdminsUrl: ").Append(AdminsUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SimpleTeamDetail);
        }

        /// <summary>
        /// Returns true if SimpleTeamDetail instances are equal
        /// </summary>
        /// <param name="input">Instance of SimpleTeamDetail to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SimpleTeamDetail input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Slug == input.Slug ||
                    (this.Slug != null &&
                    this.Slug.Equals(input.Slug))
                ) && 
                (
                    this.SelfUrl == input.SelfUrl ||
                    (this.SelfUrl != null &&
                    this.SelfUrl.Equals(input.SelfUrl))
                ) && 
                (
                    this.MembersUrl == input.MembersUrl ||
                    (this.MembersUrl != null &&
                    this.MembersUrl.Equals(input.MembersUrl))
                ) && 
                (
                    this.PoliciesUrl == input.PoliciesUrl ||
                    (this.PoliciesUrl != null &&
                    this.PoliciesUrl.Equals(input.PoliciesUrl))
                ) && 
                (
                    this.AdminsUrl == input.AdminsUrl ||
                    (this.AdminsUrl != null &&
                    this.AdminsUrl.Equals(input.AdminsUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Slug != null)
                    hashCode = hashCode * 59 + this.Slug.GetHashCode();
                if (this.SelfUrl != null)
                    hashCode = hashCode * 59 + this.SelfUrl.GetHashCode();
                if (this.MembersUrl != null)
                    hashCode = hashCode * 59 + this.MembersUrl.GetHashCode();
                if (this.PoliciesUrl != null)
                    hashCode = hashCode * 59 + this.PoliciesUrl.GetHashCode();
                if (this.AdminsUrl != null)
                    hashCode = hashCode * 59 + this.AdminsUrl.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
